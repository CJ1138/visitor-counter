name: Deploy to Production

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  provision:
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout repo
        uses: actions/checkout@v2

      - id: set_up_terraform
        name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
      
      - id: tf_init
        name: Terraform init
        run: terraform init
        env: 
          GOOGLE_CREDENTIALS: ${{ secrets.VC_PROD_GCP_CREDS }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.PR_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - id: tf_apply
        name: Terraform apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
        env: 
          GOOGLE_CREDENTIALS: ${{ secrets.VC_PROD_GCP_CREDS }}

  build_and_artifact:
    needs: [tf_apply]
    runs-on: ubuntu-latest
    steps:  
      - id: checkout
        name: Checkout repo
        uses: actions/checkout@v3
      
      - id: build
        name: Build container
        run: docker build . -t europe-west2-docker.pkg.dev/visitor-counter-qa/visitor-counter/visitor-counter:latest

      - id: auth_gcp
        name: Authorise with GCP project
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: 'projects/300165146813/locations/global/workloadIdentityPools/counter-wi-pool/providers/github-provider'
          service_account: 'github-actions-runner@visitor-counter-qa.iam.gserviceaccount.com'

      - id: auth_artifact_registry
        name: Authorise with Artifact Registry
        run: gcloud auth configure-docker europe-west2-docker.pkg.dev

      - id: push
        name: Push to Artifact Registry
        run: docker push europe-west2-docker.pkg.dev/visitor-counter-prod/visitor-counter/visitor-counter

  deploy:
    needs: [build_and_artifact]
    runs-on: ubuntu-latest
    steps: 
      - id: auth_gcp
        name: Authorise with GCP project
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: 'projects/300165146813/locations/global/workloadIdentityPools/counter-wi-pool/providers/github-provider'
          service_account: 'github-actions-runner@visitor-counter-qa.iam.gserviceaccount.com'

      - id: setup-gcloud
        name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0

      - id: update-cloud-run
        name: Update Cloud Run container
        run: gcloud run deploy visitor-counter --image europe-west2-docker.pkg.dev/visitor-counter-qa/visitor-counter/visitor-counter:latest --region=europe-west2

  qa_tests:
    needs: [deploy]
    runs-on: ubuntu-latest
    env:
        cypress_resume_page: https://chrisjohnson.tech
    steps:
    - id: checkout
      name: Checkout repo
      uses: actions/checkout@v2

    - id: live-page-test
      name: Test site in production
      uses: cypress-io/github-action@v4
      env:
        CYPRESS_resume_site: 'http://chrisjohnson.tech'
      with:
        spec: ${{ github.workspace }}/cypress/e2e/spec.cy.js
        browser: chrome